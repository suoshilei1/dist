import{F as c,aC as m,aJ as z,ae as h,bO as _,bP as j,aB as a,I as p,r as l,bQ as F,o as K,w as g,ap as E,b as N}from"./index-DWtISIBF.js";const b=s=>{const e=m();return c(()=>{var o,n;return(n=(o=e==null?void 0:e.proxy)==null?void 0:o.$props)==null?void 0:n[s]})},v={prefix:Math.floor(Math.random()*1e4),current:0},S=Symbol("elIdInjection"),w=()=>m()?a(S,v):v,D=s=>{const e=w();!z&&e===v&&h("IdInjection",`Looks like you are using server rendering, you must provide a id provider to ensure the hydration process to be succeed
usage: app.provide(ID_INJECTION_KEY, {
  prefix: number,
  current: number,
})`);const o=_();return j(()=>p(s)||`${o.value}-id-${e.prefix}-${e.current++}`)},I=Symbol("formContextKey"),y=Symbol("formItemContextKey"),$=(s,e={})=>{const o=l(void 0),n=e.prop?o:b("size"),u=e.global?o:F(),r=e.form?{size:void 0}:a(I,void 0),i=e.formItem?{size:void 0}:a(y,void 0);return c(()=>n.value||p(s)||(i==null?void 0:i.size)||(r==null?void 0:r.size)||u.value||"")},J=s=>{const e=b("disabled"),o=a(I,void 0);return c(()=>e.value||p(s)||(o==null?void 0:o.disabled)||!1)},L=()=>{const s=a(I,void 0),e=a(y,void 0);return{form:s,formItem:e}},O=(s,{formItemContext:e,disableIdGeneration:o,disableIdManagement:n})=>{o||(o=l(!1)),n||(n=l(!1));const u=l();let r;const i=c(()=>{var t;return!!(!(s.label||s.ariaLabel)&&e&&e.inputIds&&((t=e.inputIds)==null?void 0:t.length)<=1)});return K(()=>{r=g([E(s,"id"),o],([t,f])=>{const d=t??(f?void 0:D().value);d!==u.value&&(e!=null&&e.removeInputId&&(u.value&&e.removeInputId(u.value),!(n!=null&&n.value)&&!f&&d&&e.addInputId(d)),u.value=d)},{immediate:!0})}),N(()=>{r&&r(),e!=null&&e.removeInputId&&u.value&&e.removeInputId(u.value)}),{isLabeledByFormItem:i,inputId:u}};export{$ as a,J as b,L as c,O as d,y as e,I as f,w as g,D as u};
