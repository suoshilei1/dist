import{_ as re,r as _,F as A,a as W,w as B,o as z,j as T,c as D,d as J,e as X,k as u,l as h,f as S,X as oe,J as q,g as x,T as ae,U as le,V as G,v as ne}from"./index-DU5BV6sj.js";import{E as se}from"./button-C3fNXQ0E.js";import{E as ie}from"./checkbox-B_XNudq6.js";import{d as V}from"./dayjs.min-BzhD8rH5.js";import{u as H,c as b,a as K,b as Q,t as Y,f as ue,d as ce}from"./meter-CawyXifQ.js";import{C as de}from"./CustomDatePicker-DwR5Ke4u.js";import{u as Z}from"./area-CYcRQDxZ.js";import{f as me,a as fe,r as ge,c as pe,h as _e}from"./tableStyleConfig-B0fO-oaJ.js";import{g as $,a as I}from"./formula-D9TWoj50.js";/* empty css             *//* empty css                        */import{_ as he}from"./导出-BMYnDY6G.js";import{E as P}from"./index-BjNTkPPk.js";import"./index-BCql8Cu-.js";import"./plugin-vue_export-helper-CqGSI99y.js";import"./index-HfsxB2KS.js";import"./use-form-item-Bwue1zaK.js";import"./icon-Lrcg122U.js";import"./index-imETKNmt.js";import"./isEqual-Df5tNRy_.js";import"./_Uint8Array-ntTh0Oyk.js";import"./date-picker-3aSnRp6y.js";import"./popper-DmsXjoSL.js";import"./aria-BUADUvnR.js";import"./focus-trap-BFH-jL9N.js";import"./input-Cag95VNY.js";import"./index-DsemQHVw.js";import"./scrollbar-5YYltO8z.js";import"./index-BcLR6-Z9.js";import"./index-BRz9a87F.js";/* empty css                 */import"./index-BmwD9m8C.js";import"./formula-D0gGASyU.js";import"./handleError-Dl3av5vd.js";const we={__name:"index",setup(ee,{expose:c}){c();const f=H(),t=Z(),E=_(null),w=_([V().startOf("month").valueOf(),V().endOf("month").valueOf()]),k={type:"xlsx",includeFooter:!0,useStyle:!0,isFooter:!0,isColgroup:!0,isAllExpand:!0,filename:"水表日统计报表",sheetName:"表计报表",modes:["current"]},y=_([]),d=A(()=>{const e={},r={};let g=0,s=0;o.value.forEach((n,a)=>{e[`usage_${a}`]=0,r[`usage_${a}`]=0}),y.value.forEach(n=>{!n.parent_id&&!n.meter_code.includes("不明水率")&&(o.value.forEach((a,p)=>{e[`usage_${p}`]+=Number(n[`usage_${p}`]||0)}),g+=Number(n.sum||0)),n.children&&n.children.forEach(a=>{a.meter_code.includes("不明水率")||(o.value.forEach((p,R)=>{r[`usage_${R}`]+=Number(a[`usage_${R}`]||0)}),s+=Number(a.sum||0))})});const l={};o.value.forEach((n,a)=>{const p=e[`usage_${a}`],R=r[`usage_${a}`];l[`usage_${a}`]=b(p,R)});let F=[{meter_code:"一级表合计",...e,sum:g.toFixed(2)},{meter_code:"二级表合计",...r,sum:s.toFixed(2)},{meter_code:"一级表不明率",...l,sum:b(g,s)}];return i.value.forEach(n=>{F.push({meter_code:n.name,...n,sum:0})}),F}),v=_(!1),C=_(!1),L=W({transform:!0,rowField:"id",parentField:"parent_id",lazy:!0,hasChild:"hasChild",showLine:!0,loadMethod:({row:e})=>O(e)}),o=A(()=>K(w.value[0],w.value[1])),i=_([]);async function m(){if(!v.value)try{y.value=[],v.value=!0;let e=G().currentCompany.id;i.value=await $(e,"用水日报表"),i.value=await I(i.value,o.value);const r=f.treeDataForChart.map(l=>M(l)),g=await Promise.all(r);y.value=g.filter(Boolean);const s=E.value;for(let l=0;l<2;l++)await(s==null?void 0:s.setAllTreeExpand(!0))}catch(e){P({type:"error",title:"Error",message:e.message||"获取水表数据失败"}),console.error("Failed to fetch meter report:",e)}finally{v.value=!1}}async function M(e){try{const r=await Q({id:e.id,start_time:w.value[0],end_time:V(w.value[1]).add(1,"day").valueOf(),interval:"day"});return Y(e,r)}catch(r){return P({type:"error",title:"Error",message:r.message||"获取水表数据失败"}),console.error(`Failed to fetch data for meter ${e.meter_code}:`,r),null}}const N=_(!1);async function O(e){try{const r=e.customChildren.map(l=>M(l)),s=(await Promise.all(r)).filter(Boolean);return N.value&&s.push(await U(e,s)),s}catch(r){return P({type:"error",title:"Error",message:r.message||"获取水表数据失败"}),console.error("Failed to load child nodes:",r),[]}}async function U(e,r){const g={};return o.value.forEach((s,l)=>{const F=e[`usage_${l}`]||0,n=r.reduce((a,p)=>p.meter_code.includes("不明水率")?a:a+(Number(p[`usage_${l}`])||0),0);g[`usage_${l}`]=b(F,n)}),{meter_code:e.meter_code+"不明水率",...g,sum:0}}async function te(){try{C.value=!0;const e=E.value;for(let r=0;r<f.meterLevels.length;r++)await(e==null?void 0:e.setAllTreeExpand(!0));await(e==null?void 0:e.openExport({includeFooter:!0}))}finally{C.value=!1}}B([()=>w.value,()=>f.treeDataForChart],()=>{m()},{deep:!0}),B([()=>N.value],()=>{m()},{deep:!0}),z(async()=>{(!f.treeDataForChart.length||f.currentSelectedType!==1)&&(f.setCurrentSelectedType(1),await f.fetchMeterList()),m()});const j={meterStore:f,areaStore:t,tableRef:E,dateRange:w,exportConfig:k,meterTableData:y,footerData:d,isLoading:v,isExporting:C,treeConfig:L,dateColumns:o,formulaList:i,fetchMeterReport:m,fetchAndProcessMeterData:M,showUnknownRate:N,loadChildNodes:O,calculateChildWaterLossRate:U,handleExport:te,ref:_,onMounted:z,watch:B,computed:A,reactive:W,get dayjs(){return V},get getMeterReportApi(){return Q},CustomDatePicker:de,get useMeterStore(){return H},get useAreaStore(){return Z},get calculateWaterLossRate(){return b},get formatFlowValue(){return ue},get formatReadingValue(){return ce},get generateDateColumns(){return K},get transformMeterData(){return Y},get footerCellStyle(){return me},get footerRowStyle(){return fe},get rowStyle(){return ge},get cellStyle(){return pe},get headerRowStyle(){return _e},get useCompanyStore(){return G},get getFormulaData(){return I},get getFormulaList(){return $}};return Object.defineProperty(j,"__isScriptSetup",{enumerable:!1,value:!0}),j}},ye={class:"meter-report-container"},ve={class:"meter-report-header"};function Ce(ee,c,f,t,E,w){const k=ie,y=se,d=T("vxe-column"),v=T("vxe-colgroup"),C=T("vxe-table"),L=ne;return D(),J("div",ye,[X("div",ve,[u(t.CustomDatePicker,{border:"",round:"",modelValue:t.dateRange,"onUpdate:modelValue":c[0]||(c[0]=o=>t.dateRange=o)},null,8,["modelValue"]),u(k,{modelValue:t.showUnknownRate,"onUpdate:modelValue":c[1]||(c[1]=o=>t.showUnknownRate=o),label:"显示子表的不明水率"},null,8,["modelValue"]),u(y,{style:{"margin-left":"auto"},type:"success",loading:t.isExporting,onClick:t.handleExport},{icon:h(()=>c[2]||(c[2]=[X("img",{src:he,width:"14",height:"14",alt:"",srcset:""},null,-1)])),default:h(()=>[c[3]||(c[3]=S(" 导出 "))]),_:1},8,["loading"])]),oe((D(),q(C,{"show-overflow":"",style:{"font-weight":"500"},"footer-cell-style":t.footerCellStyle,"footer-row-style":t.footerRowStyle,"row-style":t.rowStyle,"cell-style":t.cellStyle,"header-row-style":t.headerRowStyle,height:"94%","show-footer":"",ref:"tableRef",border:"",align:"center",data:t.meterTableData,"tree-config":t.treeConfig,"footer-data":t.footerData,"export-config":t.exportConfig},{default:h(()=>[u(d,{"tree-node":"",fixed:"left",field:"meter_code",title:"表计编号",width:"200"}),u(d,{fixed:"left",width:"100","show-overflow":"tooltip",title:"所供区域"},{default:h(({row:o})=>[S(x(t.areaStore.getAreaNameById(o.area_id)||"-"),1)]),_:1}),u(d,{width:"120","how-overflow":"tooltip",field:"installation_location",title:"安装位置"}),u(d,{field:"specification",width:"100",title:"规格"}),u(d,{width:"100",field:"startReading",title:"启读数"}),(D(!0),J(ae,null,le(t.dateColumns,(o,i)=>(D(),q(v,{key:o,title:o},{default:h(()=>[u(d,{width:"100",field:`usage_${i}`,title:"流量"},{default:h(({row:m})=>[S(x(t.formatFlowValue(m[`usage_${i}`])||"-"),1)]),footer:h(({row:m})=>[S(x(t.formatFlowValue(m[`usage_${i}`])||"-"),1)]),_:2},1032,["field"]),u(d,{width:"100",field:`reading_${i}`,title:"读数"},{default:h(({row:m})=>[S(x(t.formatReadingValue(m[`reading_${i}`])),1)]),_:2},1032,["field"])]),_:2},1032,["title"]))),128)),u(d,{fixed:"right",field:"sum",width:"100",title:"总流量"})]),_:1},8,["footer-cell-style","footer-row-style","row-style","cell-style","header-row-style","data","tree-config","footer-data"])),[[L,t.isLoading]])])}const rt=re(we,[["render",Ce],["__scopeId","data-v-3877d593"],["__file","D:/临时存放/green-carbon-1.0/src/views/EnergyData/WaterData/IntelligentMeter/MonthlyMeter/index.vue"]]);export{rt as default};
