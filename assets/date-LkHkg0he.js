import{d as o}from"./dayjs.min-VPOC9PSa.js";function l(n,s="yyyy-MM-dd"){const a=new Date(n);if(isNaN(a.getTime()))throw new Error("Invalid date string provided");const r={yyyy:a.getFullYear(),MM:String(a.getMonth()+1).padStart(2,"0"),dd:String(a.getDate()).padStart(2,"0"),HH:String(a.getHours()).padStart(2,"0"),mm:String(a.getMinutes()).padStart(2,"0"),ss:String(a.getSeconds()).padStart(2,"0"),M:String(a.getMonth()+1),d:String(a.getDate()),H:String(a.getHours()),m:String(a.getMinutes()),s:String(a.getSeconds())};let t=s;for(const[e,d]of Object.entries(r))t=t.replace(new RegExp(e,"g"),d);return t}const i={HALF_HOUR:"half_hour",DAY:"day",MONTH:"month"},g=(n,s=!1,a=new Date)=>{const r=o(a);let t=0;n==="daily"?(t=1,s&&(t=2)):s&&(t=1);let e={start_time:"",end_time:"",interval:0};switch(n){case"daily":e.start_time=r.subtract(t,"day").startOf("day").valueOf(),e.end_time=r.subtract(t,"day").endOf("day").valueOf(),e.interval=i.HALF_HOUR;break;case"weekly":e.start_time=r.subtract(t,"week").startOf("week").valueOf(),e.end_time=r.subtract(t,"week").endOf("week").valueOf(),e.interval=i.DAY;break;case"monthly":e.start_time=r.subtract(t,"month").startOf("month").valueOf(),e.end_time=r.subtract(t,"month").add(1,"day").endOf("month").valueOf(),e.interval=i.DAY;break;case"yearly":e.start_time=r.subtract(t,"year").startOf("year").valueOf(),e.end_time=r.subtract(t,"year").endOf("year").valueOf(),e.interval=i.MONTH;break;default:throw new Error("Invalid report type")}return e};export{l as f,g};
