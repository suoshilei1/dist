import{o as D,T as I,ah as N,H as C,aR as U,b9 as $,E as T,F as A,aJ as F,bS as x,w as V,bT as j,bU as G,bV as J,bW as K,aG as y,z as q,C as k,D as Q,k as Z,M as L,av as _}from"./index-DWtISIBF.js";import{g as R}from"./scroll-DMdoCUCr.js";import{P as h}from"./vnode-BIvhTfyw.js";const ue=(e,o,n,s)=>{let a={offsetX:0,offsetY:0};const c=i=>{const f=i.clientX,S=i.clientY,{offsetX:v,offsetY:p}=a,d=e.value.getBoundingClientRect(),b=d.left,M=d.top,Y=d.width,O=d.height,P=document.documentElement.clientWidth,H=document.documentElement.clientHeight,X=-b+v,B=-M+p,W=P-b-Y+v,z=H-M-O+p,g=E=>{let r=v+E.clientX-f,m=p+E.clientY-S;s!=null&&s.value||(r=Math.min(Math.max(r,X),W),m=Math.min(Math.max(m,B),z)),a={offsetX:r,offsetY:m},e.value&&(e.value.style.transform=`translate(${C(r)}, ${C(m)})`)},w=()=>{document.removeEventListener("mousemove",g),document.removeEventListener("mouseup",w)};document.addEventListener("mousemove",g),document.addEventListener("mouseup",w)},t=()=>{o.value&&e.value&&o.value.addEventListener("mousedown",c)},l=()=>{o.value&&e.value&&o.value.removeEventListener("mousedown",c)},u=()=>{a={offsetX:0,offsetY:0},e.value&&(e.value.style.transform="none")};return D(()=>{I(()=>{n.value?t():l()})}),N(()=>{l()}),{resetPosition:u}},ie=(e,o={})=>{U(e)||$("[useLockscreen]","You need to pass a ref param to this function");const n=o.ns||T("popup"),s=A(()=>n.bm("parent","hidden"));if(!F||x(document.body,s.value))return;let a=0,c=!1,t="0";const l=()=>{setTimeout(()=>{typeof document>"u"||(K(document==null?void 0:document.body,s.value),c&&document&&(document.body.style.width=t))},200)};V(e,u=>{if(!u){l();return}c=!x(document.body,s.value),c&&(t=document.body.style.width),a=R(n.namespace.value);const i=document.documentElement.clientHeight<document.body.scrollHeight,f=j(document.body,"overflowY");a>0&&(i||f==="scroll")&&c&&(document.body.style.width=`calc(100% - ${a}px)`),G(document.body,s.value)}),J(()=>l())},ee=e=>{if(!e)return{onClick:y,onMousedown:y,onMouseup:y};let o=!1,n=!1;return{onClick:t=>{o&&n&&e(t),o=n=!1},onMousedown:t=>{o=t.target===t.currentTarget},onMouseup:t=>{n=t.target===t.currentTarget}}},te=q({mask:{type:Boolean,default:!0},customMaskEvent:Boolean,overlayClass:{type:k([String,Array,Object])},zIndex:{type:k([String,Number])}}),oe={click:e=>e instanceof MouseEvent},ne="overlay";var se=Q({name:"ElOverlay",props:te,emits:oe,setup(e,{slots:o,emit:n}){const s=T(ne),a=u=>{n("click",u)},{onClick:c,onMousedown:t,onMouseup:l}=ee(e.customMaskEvent?void 0:a);return()=>e.mask?Z("div",{class:[s.b(),e.overlayClass],style:{zIndex:e.zIndex},onClick:c,onMousedown:t,onMouseup:l},[L(o,"default")],h.STYLE|h.CLASS|h.PROPS,["onClick","onMouseup","onMousedown"]):_("div",{class:e.overlayClass,style:{zIndex:e.zIndex,position:"fixed",top:"0px",right:"0px",bottom:"0px",left:"0px"}},[L(o,"default")])}});const de=se;export{de as E,ie as a,ee as b,ue as u};
