import{aH as M,D as he,r as oe,F as ae,o as pe,b as Me,I as z,c as ve,d as Le,e as ie,M as re,n as le,g as ke,U as we,h as qe,w as s,aC as ce,aB as se,ah as Be}from"./index-DWtISIBF.js";function Se(t){return{all:t=t||new Map,on:function(i,r){var e=t.get(i);e?e.push(r):t.set(i,[r])},off:function(i,r){var e=t.get(i);e&&(r?e.splice(e.indexOf(r)>>>0,1):t.set(i,[]))},emit:function(i,r){var e=t.get(i);e&&e.slice().map(function(a){a(r)}),(e=t.get("*"))&&e.slice().map(function(a){a(i,r)})}}}const Ce=Se();function de(){return Ce}const _=()=>{},U={};function u({key:t,src:i,addCalToWindow:r=!1,exportGetter:e=_}){let a;try{a=e()}catch{}if(!U[t]&&!a)U[t]=new Promise((o,c)=>{const l=document.createElement("script"),m=()=>{o({[t]:e()}),window.document.body.removeChild(l)};r?window[t]=m:l.onload=function(){(!this.readyState||this.readyState=="loaded"||this.readyState=="complete")&&(l.onload=null,m())},l.src=i,l.type="text/javascript",l.defer=!0,l.onerror=c,document.body.appendChild(l)});else if(a!==void 0)return Promise.resolve({[t]:a});return U[t]}const p={Mapvgl:"https://unpkg.com/mapvgl/dist/mapvgl.min.js",MapvglThreeLayers:"https://unpkg.com/mapvgl/dist/mapvgl.threelayers.min.js",Mapv:"https://unpkg.com/mapv/build/mapv.min.js",MapvThree:"https://unpkg.com/mapv-three/dist/mapvthree.umd.js",TrackAnimation:"https://mapopen.bj.bcebos.com/github/BMapGLLib/TrackAnimation/src/TrackAnimation.min.js",DrawingManager:"https://mapopen.bj.bcebos.com/github/BMapGLLib/DrawingManager/src/DrawingManager.min.js",DistanceTool:"https://mapopen.bj.bcebos.com/github/BMapGLLib/DistanceTool/src/DistanceTool.min.js",GeoUtils:"https://mapopen.bj.bcebos.com/github/BMapGLLib/GeoUtils/src/GeoUtils.min.js",AreaRestriction:"https://mapopen.bj.bcebos.com/github/BMapGLLib/AreaRestriction/src/AreaRestriction.min.js",InfoBox:"https://mapopen.bj.bcebos.com/github/BMapGLLib/InfoBox/src/InfoBox.min.js",RichMarker:"https://bj.bcebos.com/v1/mapopen/github/BMapGLLib/RichMarker/src/RichMarker.min.js",LuShu:"https://bj.bcebos.com/v1/mapopen/github/BMapGLLib/Lushu/src/Lushu.min.js"},Te={TrackAnimation:t=>u({src:t||p.TrackAnimation,key:"trackAnimation",exportGetter:()=>window.BMapGLLib.TrackAnimation}),DrawingManager:t=>u({src:t||p.DrawingManager,key:"DrawingManager",exportGetter:()=>window.BMapGLLib.DrawingManager}),DistanceTool:t=>u({src:t||p.DistanceTool,key:"DistanceTool",exportGetter:()=>window.BMapGLLib.DistanceTool}),GeoUtils:t=>u({src:t||p.GeoUtils,key:"GeoUtils",exportGetter:()=>window.BMapGLLib.GeoUtils}),RichMarker:t=>u({src:t||p.RichMarker,key:"RichMarker",exportGetter:()=>window.BMapGLLib.RichMarker}),AreaRestriction:t=>u({src:t||p.AreaRestriction,key:"AreaRestriction",exportGetter:()=>window.BMapGLLib.AreaRestriction}),InfoBox:t=>u({src:t||p.InfoBox,key:"InfoBox",exportGetter:()=>window.BMapGLLib.InfoBox}),LuShu:t=>u({src:t||p.Lushu,key:"Lushu",exportGetter:()=>window.BMapGLLib.LuShu}),Mapvgl:t=>u({src:t||p.Mapvgl,key:"Mapvgl",exportGetter:()=>window.mapvgl}),MapvglThreeLayers:t=>u({src:t||p.MapvglThreeLayers,key:"MapvglThreeLayers",exportGetter:()=>window.mapvglThreeLayers}),Mapv:t=>u({src:t||p.Mapv,key:"Mapv",exportGetter:()=>window.mapv}),MapvThree:t=>u({src:t||p.MapvThree,key:"MapvThree",exportGetter:()=>window.mapvthree})};function De(t,i={}){const r=[...new Set(t)].reduce((e,a)=>{let o;return typeof a=="string"&&(o=Te[a])?e.push(o(i[a])):typeof a=="function"&&e.push(a()),e},[]);return Promise.all(r).then(e=>{const a={};return e.forEach(o=>{Object.assign(a,o)}),a})}function Ge(t,i,r){for(const e of Object.keys(t))if(/^on/.test(e)&&t[e]){const a=e.replace(/^on/,"").toLocaleLowerCase();r.addEventListener(a,o=>{var c,l;o.preventDefault=o.preventDefault||((c=o.domEvent)===null||c===void 0?void 0:c.preventDefault.bind(o.domEvent)),o.stopPropagation=o.stopPropagation||((l=o.domEvent)===null||l===void 0?void 0:l.stopPropagation.bind(o.domEvent)),i(a,o)})}}function Ie(t,i){console.warn(`[Vue3 BaiduMap GL/${t}]: ${i}`)}function v(t,i){console.error(`[Vue3 BaiduMap GL/${t}]: ${i}`)}const Ae=typeof window<"u",Pe=t=>typeof t<"u";function ue(t){return Object.prototype.toString.call(t)==="[object String]"}let Re=0;function Ze(){return`${Re++}`}function $(t){return(i,r)=>{(i===r||i!==r&&JSON.stringify(i)!==JSON.stringify(r))&&t(i)}}function fe(){const t=Ze();return M("parentComponentId",t),t}const xe=["id"];var je=he(Object.assign({name:"BMap"},{__name:"index",props:{ak:{type:String,required:!1},apiUrl:{type:String,required:!1},width:{type:[String,Number],required:!1,default:"100%"},height:{type:[String,Number],required:!1,default:"550px"},center:{type:null,required:!1,default:()=>({lat:39.915185,lng:116.403901})},mapType:{type:null,required:!1,default:"BMAP_NORMAL_MAP"},zoom:{type:Number,required:!1,default:14},heading:{type:Number,required:!1,default:0},tilt:{type:Number,required:!1,default:0},minZoom:{type:Number,required:!1,default:0},maxZoom:{type:Number,required:!1,default:21},noAnimation:{type:Boolean,required:!1,default:!1},mapStyleId:{type:String,required:!1},mapStyleJson:{type:Array,required:!1},showControls:{type:Boolean,required:!1,default:!1},plugins:{type:null,required:!1},pluginsSourceLink:{type:Object,required:!1},displayOptions:{type:Object,required:!1},restrictCenter:{type:Boolean,required:!1,default:!0},enableTraffic:{type:Boolean,required:!1,default:!1},enableDragging:{type:Boolean,required:!1,default:!0},enableInertialDragging:{type:Boolean,required:!1,default:!0},enableScrollWheelZoom:{type:Boolean,required:!1,default:!1},enableContinuousZoom:{type:Boolean,required:!1,default:!0},enableResizeOnCenter:{type:Boolean,required:!1,default:!0},enableDoubleClickZoom:{type:Boolean,required:!1,default:!1},enableKeyboard:{type:Boolean,required:!1,default:!0},enablePinchToZoom:{type:Boolean,required:!1,default:!0},enableAutoResize:{type:Boolean,required:!1,default:!0},enableIconClick:{type:Boolean,required:!1},loadingBgColor:{type:String,required:!1,default:"#f1f1f1"},loadingTextColor:{type:String,required:!1,default:"#999"},backgroundColor:{type:Array,required:!1,default:()=>[245,245,245,100]},onClick:{type:null,required:!1},onDblclick:{type:null,required:!1},onRightclick:{type:null,required:!1},onRightdblclick:{type:null,required:!1},onMaptypechange:{type:null,required:!1},onMousemove:{type:null,required:!1},onMouseover:{type:null,required:!1},onMouseout:{type:null,required:!1},onMovestart:{type:null,required:!1},onMoving:{type:null,required:!1},onMoveend:{type:null,required:!1},onZoomstart:{type:null,required:!1},onZoomend:{type:null,required:!1},onAddoverlay:{type:null,required:!1},onAddcontrol:{type:null,required:!1},onRemovecontrol:{type:null,required:!1},onRemoveoverlay:{type:null,required:!1},onClearoverlays:{type:null,required:!1},onDragstart:{type:null,required:!1},onDragging:{type:null,required:!1},onDragend:{type:null,required:!1},onAddtilelayer:{type:null,required:!1},onRemovetilelayer:{type:null,required:!1},onLoad:{type:null,required:!1},onResize:{type:null,required:!1},onHotspotclick:{type:null,required:!1},onHotspotover:{type:null,required:!1},onHotspotout:{type:null,required:!1},onTilesloaded:{type:null,required:!1},onTouchstart:{type:null,required:!1},onTouchmove:{type:null,required:!1},onTouchend:{type:null,required:!1},onLongpress:{type:null,required:!1}},emits:["initd","unload","pluginReady","click","dblclick","rightclick","rightdblclick","maptypechange","mousemove","mouseover","mouseout","movestart","moving","moveend","zoomstart","zoomend","addoverlay","addcontrol","removecontrol","removeoverlay","clearoverlays","dragstart","dragging","dragend","addtilelayer","removetilelayer","load","resize","hotspotclick","hotspotover","hotspotout","tilesloaded","touchstart","touchmove","touchend","longpress"],setup(t,{expose:i,emit:r}){const e=t,a=oe();let o=null,c=oe(!1);const l=ce(),m=fe(),{emit:L}=de(),k=ae(()=>ue(e.width)?e.width:`${e.width}px`),w=ae(()=>ue(e.height)?e.height:`${e.height}px`),g=Ae&&!!l;function y(){if(!g)return;const{proxy:n}=l,f=e.ak||n&&n.$baiduMapAk,b=e.apiUrl||n&&n.$baiduMapApiUrl;if(!f&&!b)return Ie("BMap","ak or apiUrl is required");const C=e.plugins&&n.$baiduMapPlugins?Object.assign(n.$baiduMapPlugins,e.plugins):e.plugins||n.$baiduMapPlugins,G=e.pluginsSourceLink&&n.$baiduMapPluginsSourceLink?Object.assign(n.$baiduMapPluginsSourceLink,e.pluginsSourceLink):e.pluginsSourceLink||n.$baiduMapPluginsSourceLink||{},T=b?"_initBMap_":`_initBMap_${f}`;u({src:b||`//api.map.baidu.com/api?type=webgl&v=1.0&ak=${f}&callback=${T}`,addCalToWindow:!0,key:T,exportGetter:()=>window.BMapGL}).then(()=>{const{restrictCenter:h,enableIconClick:I,backgroundColor:A,minZoom:R,maxZoom:Z,mapType:x,enableAutoResize:j,showControls:O,center:be,displayOptions:ye}=e;if(!a.value)return;o=new BMapGL.Map(a.value,{backgroundColor:A,enableIconClick:I,restrictCenter:h,minZoom:R,maxZoom:Z,mapType:window[x],enableAutoResize:j,showControls:O,displayOptions:ye}),B(be),q(),d(),D(),Ge(e,r,o),C&&De(C,G).then(P=>{r("pluginReady",o,P)}).catch(P=>{v("BMap","plugins error: "+P)});const ne={map:o,instance:l,BMapGL:window.BMapGL};L(m,ne),r("initd",ne),c.value=!0}).catch(h=>v("BMap",h.message))}function d(){if(e.mapStyleId){o.setMapStyleV2({styleId:e.mapStyleId});return}else e.mapStyleJson&&o.setMapStyleV2({styleJson:e.mapStyleJson})}function D(){s(()=>e.zoom,E),s(()=>e.tilt,J),s(()=>e.heading,V),s(()=>e.center,$(B),{deep:!0}),s(()=>e.mapStyleId,d),s(()=>e.mapStyleJson,$(d),{deep:!0}),s(()=>e.displayOptions,$(ge),{deep:!0}),s(()=>e.mapType,W),s(()=>e.enableTraffic,N),s(()=>e.enableDragging,S),s(()=>e.enableInertialDragging,H),s(()=>e.enableScrollWheelZoom,K),s(()=>e.enableContinuousZoom,F),s(()=>e.enableResizeOnCenter,Q),s(()=>e.enableDoubleClickZoom,X),s(()=>e.enableKeyboard,Y),s(()=>e.enablePinchToZoom,ee),s(()=>e.enableAutoResize,te)}function q(){const{enableDragging:n,enableInertialDragging:f,enableScrollWheelZoom:b,enableContinuousZoom:C,enableResizeOnCenter:G,enableDoubleClickZoom:T,enableKeyboard:h,enablePinchToZoom:I,enableAutoResize:A,enableTraffic:R,mapType:Z,zoom:x,tilt:j,heading:O}=e;E(x),J(j),N(R),V(O),W(Z),Y(h),S(n),te(A),ee(I),F(C),Q(G),X(T),K(b),H(f)}function me(n,f){return new BMapGL.Point(n,f)}function N(n){n?o.setTrafficOn():o.setTrafficOff()}function B(n){typeof n=="string"?o.centerAndZoom(n,e.zoom):o.centerAndZoom(me(n.lng,n.lat),e.zoom)}function ge(n){o.setDisplayOptions(n||{})}function E(n){o.setZoom(n,{noAnimation:e.noAnimation})}function W(n){window[n]!==void 0&&o.setMapType(window[n])}function V(n){o.setHeading(n)}function J(n){o.setTilt(n)}function S(n){n?o.enableDragging():o.disableDragging()}function H(n){n?o.enableInertialDragging():o.disableInertialDragging()}function K(n){n?o.enableScrollWheelZoom():o.disableScrollWheelZoom()}function F(n){n?o.enableContinuousZoom():o.disableContinuousZoom()}function Q(n){n?o.enableResizeOnCenter():o.disableResizeOnCenter()}function X(n){n?o.enableDoubleClickZoom():o.disableDoubleClickZoom()}function Y(n){n?o.enableKeyboard():o.disableKeyboard()}function ee(n){n?o.enablePinchToZoom():o.disablePinchToZoom()}function te(n){n?o.enableAutoResize():o.disableAutoResize()}return pe(y),Me(()=>{if(o)try{o.destroy()}catch(n){v("BMapGL SDK",n.message)}}),i({getMapInstance:()=>o,getBaseMapOptions:()=>e,resetCenter:()=>B(e.center),setDragging:S}),M("getMapInstance",()=>o),M("baseMapSetCenterAndZoom",n=>B(n)),M("baseMapSetDragging",n=>S(n)),M("getBaseMapOptions",()=>e),(n,f)=>z(g)?(ve(),Le(we,{key:0},[ie("div",{id:z(m),class:"baidu-map-container",ref_key:"mapContainer",ref:a,style:le([{width:k.value,height:w.value,background:e.loadingBgColor},{position:"relative",overflow:"hidden"}])},[re(n.$slots,"loading",{},()=>[ie("div",{style:le([{color:e.loadingTextColor},{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"}])},ke(z(c)?"":"map loading..."),5)])],12,xe),re(n.$slots,"default")],64)):qe("v-if",!0)}}));je.__file="packages/components/map/index.vue";function ze(t){const{on:i,off:r,emit:e}=de(),a=ce(),o=fe(),{emit:c}=a||{emit:_},l=se("getMapInstance",void 0),L=se("parentComponentId",void 0)||"",k=a&&a.type.name||"";if(typeof l>"u")return v(k,"must be a child node of the Bmap component"),{ready:_};const w=l();let g;const y=d=>{g=t(d.map)};return pe(()=>{w?y({map:w}):i(L,y)}),Be(()=>{try{g&&g()}catch(d){v(k,d.message)}c("unload"),r(L,y)}),{ready:(d,D)=>{const q={map:d,instance:D,BMapGL:window.BMapGL};c("initd",q),e(o,q)}}}export{ue as a,Ge as b,$ as c,Pe as i,je as s,ze as u,Ie as w};
