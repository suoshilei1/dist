import{a5 as N,a6 as V,r as y,F as S,W as B,T as M,c as b,d as w,e as d,f as j,i as m,j as p,U as D,V as C,J as k,g as O,N as F}from"./index-Bx6Y8L80.js";import{E as A,a as H}from"./col-TrHbeXFY.js";import{E as $}from"./card-fNeABwz5.js";/* empty css            */import{E as L,a as U}from"./select-BmMHn9PT.js";import"./scrollbar-DuXO1tWo.js";import"./popper-DBn8ulUn.js";import{B as x}from"./BaseChart-DcPP-dUj.js";import{_ as q}from"./AnimatedNumber-BnUE5Cda.js";import{d as v}from"./dayjs.min-Cd48fqZ9.js";import{h as z}from"./handleError-DD4JYoq7.js";import"./plugin-vue_export-helper-CqGSI99y.js";import"./index-iw6eP590.js";import"./index-CuyxIfpa.js";import"./index-aFn2MKle.js";import"./index-A4BGBRGh.js";import"./use-form-item-50hJ8Ppj.js";import"./castArray-CrUPC_Z8.js";import"./icon-6zrsquxY.js";import"./aria-BUADUvnR.js";import"./scroll-BawlEUY1.js";import"./isEqual-BM-Gj-iT.js";import"./_Uint8Array-B6mJ0Xm4.js";import"./_baseIteratee-CkjM3wkz.js";import"./index-zrRcpBp4.js";import"./focus-trap-Ddg061Nm.js";import"./DebounceAndThrottle-B_grFKK4.js";import"./installCanvasRenderer-7dDAEUGk.js";/* empty css                *//* empty css             *//* empty css                        */import"./index-KJp6TXG9.js";import"./index-CWCMyxJA.js";const E=i=>N.get("/algorithm/basic_carbon/",{params:i}),G=V("carbon",()=>{const i=y([]),n=y([]),t=(r,a)=>r.reduce((o,e)=>{const l=e.usage[a];return o+(l==null?0:Number(l))},0),h=r=>Object.values(r.usage).reduce((a,o)=>{const e=o==null?0:Number(o);return a+e},0),_=S(()=>{const r={water:t(i.value,"water"),elec:t(i.value,"elec"),gas:t(i.value,"gas"),oil:t(i.value,"oil"),heat:t(i.value,"heat")},a={water:t(n.value,"water"),elec:t(n.value,"elec"),gas:t(n.value,"gas"),oil:t(n.value,"oil"),heat:t(n.value,"heat")},o=Object.values(r).reduce((c,s)=>c+s,0),e=Object.values(a).reduce((c,s)=>c+s,0),l=(c,s)=>s===0?0:((c-s)/s*100).toFixed(2);return{currentYear:r,lastYear:a,yearlyTotal:o,lastYearTotal:e,growthRates:{water:l(r.water,a.water),elec:l(r.elec,a.elec),gas:l(r.gas,a.gas),oil:l(r.oil,a.oil),heat:l(r.heat,a.heat),total:l(o,e)},monthlyData:i.value.map((c,s)=>({startTime:c.start_time,endTime:c.end_time,usage:c.usage,total:h(c),lastYearTotal:n.value[s]?h(n.value[s]):0}))}});async function f(r){try{const a=await E(r);i.value=a.data}catch(a){throw console.error("Failed to fetch current year carbon data:",a),a}}async function g(r){try{const a=await E(r);n.value=a.data}catch(a){throw console.error("Failed to fetch last year carbon data:",a),a}}return{carbonData:i,lastCarbonData:n,carbonStatistics:_,fetchCarbonData:f,fetchLastCarbonData:g}}),J={class:"main-container"},P={class:"page-title header"},W={class:"carbon-monitoring"},I={class:"overview-cards"},K={class:"card-content"},Q={class:"card-header"},X={class:"title"},Z={class:"value"},Bt={__name:"index",setup(i){const n=B(),t=G();console.log(v().startOf("year").format("YYYY-MM-DD HH:mm:ss"),v().endOf("year").format("YYYY-MM-DD HH:mm:ss"));async function h(){try{await Promise.all([t.fetchCarbonData({id:n.currentCompany.id,start_time:v().startOf("year").valueOf(),end_time:v().endOf("year").valueOf(),interval:"month"}),t.fetchLastCarbonData({id:n.currentCompany.id,start_time:v().subtract(1,"year").startOf("year").valueOf(),end_time:v().subtract(1,"year").endOf("year").valueOf(),interval:"month"})])}catch(o){z(o,"获取碳排放数据失败")}}M(h);const _=y("overview"),f=[{value:"overview",label:"总览"},{value:"area1",label:"区域一"},{value:"area2",label:"区域二"},{value:"area3",label:"区域三"}],g=S(()=>[{title:"本年总碳排放",value:t.carbonStatistics.yearlyTotal,rate:`${t.carbonStatistics.growthRates.total}%`,trend:Number(t.carbonStatistics.growthRates.total)>0?"up":"down"},{title:"电力碳排放",value:t.carbonStatistics.currentYear.elec,rate:`${t.carbonStatistics.growthRates.elec}%`,trend:Number(t.carbonStatistics.growthRates.elec)>0?"up":"down"},{title:"水资源碳排放",value:t.carbonStatistics.currentYear.water,rate:`${t.carbonStatistics.growthRates.water}%`,trend:Number(t.carbonStatistics.growthRates.water)>0?"up":"down"},{title:"天然气碳排放",value:t.carbonStatistics.currentYear.gas,rate:`${t.carbonStatistics.growthRates.gas}%`,trend:Number(t.carbonStatistics.growthRates.gas)>0?"up":"down"}]),r=S(()=>{const o=t.carbonStatistics.monthlyData;return{title:"碳排放趋势",xAxisData:o.map(e=>v(e.startTime).format("YYYY-MM")),series:[{name:"电力",type:"line",data:o.map(e=>e.usage.elec||0)},{name:"水资源",type:"line",data:o.map(e=>e.usage.water||0)},{name:"天然气",type:"line",data:o.map(e=>e.usage.gas||0)}]}}),a={title:"设定定额",xAxisData:["2024"],series:[{name:"实际排放",type:"bar",data:[600]},{name:"定额值",type:"bar",data:[650]}]};return(o,e)=>{const l=L,c=U,s=$,Y=A,R=H;return b(),w("div",J,[d("div",P,[e[1]||(e[1]=j(" 能碳监控 ")),m(c,{style:{width:"150px"},modelValue:_.value,"onUpdate:modelValue":e[0]||(e[0]=u=>_.value=u),placeholder:"请选择区域"},{default:p(()=>[(b(),w(D,null,C(f,u=>m(l,{key:u.value,label:u.label,value:u.value},null,8,["label","value"])),64))]),_:1},8,["modelValue"])]),d("div",W,[d("div",I,[(b(!0),w(D,null,C(g.value,(u,T)=>(b(),k(s,{key:T,class:"overview-card"},{default:p(()=>[d("div",K,[d("div",Q,[d("span",X,O(u.title),1),d("span",{class:F(["rate",u.trend])},O(u.rate),3)]),d("div",Z,[m(q,{suffix:"吨",value:u.value},null,8,["value"])])])]),_:2},1024))),128))])]),m(R,{gutter:16,class:"charts-container"},{default:p(()=>[m(Y,{span:16},{default:p(()=>[m(s,{header:"碳排放趋势"},{default:p(()=>[m(x,{height:"430px",options:r.value},null,8,["options"])]),_:1})]),_:1}),m(Y,{span:8},{default:p(()=>[m(s,{header:"设定定额"},{default:p(()=>[m(x,{height:"430px",options:a})]),_:1})]),_:1})]),_:1})])}}};export{Bt as default};
